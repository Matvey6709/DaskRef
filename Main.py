from aiogram import Bot, Dispatcher, executor, types
import os
from aiogram.dispatcher.filters import Text
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from dotenv import load_dotenv

load_dotenv()

bot = Bot(token="7529120639:AAFfxyQxHncEdhBd0PgTNvoiCEN5f85F5Q0")
dp = Dispatcher(bot)

button_z = KeyboardButton('üíé –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', callback_data='btn1')
button_k = KeyboardButton('üíº –ö–∞–±–∏–Ω–µ—Ç', callback_data='btn2')
button_i = KeyboardButton('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='btn3')
greet_kb = ReplyKeyboardMarkup(resize_keyboard=True)
greet_kb.row(button_z, button_k)
greet_kb.add(button_i)


@dp.message_handler(commands='start')
async def start(mes):
    await mes.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–≤–æ—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª.', reply_markup=greet_kb)
    # await check_subscribe(mes)



@dp.message_handler()
async def check_subscribe(mes):
    chat_id = '-1002134305326'
    user_channel_status = await bot.get_chat_member(chat_id=chat_id,
                                                    user_id=mes.from_user.id)

    if user_channel_status['status'] != 'left':
        await mes.answer('–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç!')
        await send_content(mes)
        return True

    else:
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
                                              url='https://t.me/+NV69Akn5BvkwMjcy'))

        await mes.answer('–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!',
                         reply_markup=markup)
        # await mes.answer('–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
@dp.message_handler(lambda message: message.text == "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
async def without_puree(message: types.Message):
    await message.reply("–¢–∞–∫ –Ω–µ–≤–∫—É—Å–Ω–æ!")

@dp.message_handler(Text(equals="üíé –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å"))
async def with_puree(msg):
    await msg.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!")

# @dp.message_handler(content_types=["text"])
# async def btn_f(mes):
#     print(mes)
#     if mes == 'üíé –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å':
#         print("–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
#     if mes == 'üíº –ö–∞–±–∏–Ω–µ—Ç':
#         print("–ö–∞–±–∏–Ω–µ—Ç")
#     if mes == 'üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
#         print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")



@dp.message_handler()
async def send_content(mes):
    await mes.answer('–ö–æ–Ω—Ç–µ–Ω—Ç')


if __name__ == '__main__':
    executor.start_polling(dp)
